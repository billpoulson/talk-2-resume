services:
  talk2resume_client:
    build:
      context: .
      dockerfile: dockerfile.client
    depends_on:
      - talk2resume_api
    image: talk2resume/client
    init: true
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    ports:
      - '4201:4201'
    environment:
      NODE_ENV: ${NODE_ENV}
      DOTENV_KEY: ${DOTENV_KEY_CLIENT} # Provided in deploy-script

  talk2resume_api:
    build:
      context: .
      dockerfile: dockerfile.api
    depends_on:
      - chromadb
      - mongodb
      - ollama
      - redis
    image: talk2resume/api
    init: true
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    ports:
      - '8181:8181'
    environment:
      NODE_ENV: ${NODE_ENV} # Provided in deploy-script
      DOTENV_KEY: ${DOTENV_KEY_API} # Provided in deploy-script
      PORT: 8181

  talk2resume_share:
    build:
      context: packages/file-sharing
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - redis
    image: talk2resume/share
    init: true
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    ports:
      - '8281:8281'
    environment:
      DOTENV_KEY: ${DOTENV_KEY_SHARE} # Provided in deploy-script
      AUTH_ISSUER: ${AUTH_ISSUER} # Provided in deploy-script
      AUTH_AUDIENCE: ${AUTH_AUDIENCE} # Provided in deploy-script
      HTTP_PORTS: 8281

  chromadb:
    image: chromadb/chroma
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

  mongodb:
    image: mongo
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

  ollama:
    image: ollama/ollama
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    runtime: nvidia
  
  ngrok:
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command: http host.docker.internal:4201 --url=${APPLICATION_DOMAIN}

  # redis:
  #   image: redis:latest
  #   ports:
  #     - '6379:6379'

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    # environment:
    #   - REDIS_PASSWORD=mysecurepassword
    command: ["redis-server"]
    # command: ["redis-server", "--requirepass", "mysecurepassword"]
volumes:
  redis-data:



